# prefix once, next window twice, literal
set-option -g prefix C-b
bind-key C-b next-window
bind-key b send-key C-b

# previous window and next with alert while we're at it
bind-key C-v previous-window
unbind C-n
bind-key C-n next-window -a

# utf8 or die
set-window-option -g utf8 on

# status (windows bar)
set-option -g status on
set-option -g status-interval 1
set-option -g status-justify left 

# status left
set-window-option -g status-left "â†’"

# status right
set-window-option -g status-right-length 200 
set-window-option -g status-right "#(date +'%a %d %b %Y %H:%M.%S %z') load:[#(awk '{print $1,$2,$3}' /proc/loadavg)] battery:[#(cat /sys/class/power_supply/BAT1/capacity)% #(cat /sys/class/power_supply/BAT1/status)"]

# watch for activity
set-window-option -g monitor-activity on
set-window-option -g visual-activity on

# colours for status
set-option -g status-fg colour35
set-option -g status-bg colour233

# colours for current window
set-window-option -g window-status-current-fg colour47
set-window-option -g window-status-current-bg colour237

# colours for activity
set-window-option -g window-status-activity-fg colour199
set-window-option -g window-status-activity-bg colour234

# colours for bell
set-window-option -g window-status-bell-fg colour226
set-window-option -g window-status-bell-bg colour56

# colours for message
set-option -g message-bg colour55
set-option -g message-fg colour14

# colours for command mode
set-option -g message-command-bg colour237
set-option -g message-command-fg colour46

# auto rename window
set-window-option -g automatic-rename on

# more logical splits
bind | split -h
bind - split -v 

# mouse - but copy mode is weird so use [
set-option -g mouse-select-window on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on

# vim pane movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vim copy mode movement
set-window-option -g mode-keys vi

# make copy mode more vimmy
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# copy paste buffer to clipboard
bind C-c run "tmux show-buffer | xsel -i -b"
